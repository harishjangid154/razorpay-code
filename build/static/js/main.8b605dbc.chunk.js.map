{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["backend_url","loadRazorpay","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","App","amountRef","useRef","txnIdRef","useState","resData","setResData","loaded","setLoaded","refundData","setRefundData","showRefund","setShowRefund","displayRazorpay","a","alert","options","key","amount","currency","name","description","image","order_id","raz_order_id","callback_url","prefill","email","contact","window","Razorpay","open","className","type","placeholder","value","current","ref","onClick","axios","url","method","data","then","res","status","payment_id","p","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gQAAaA,G,MAAc,iC,OCK3B,SAASC,EAAaC,GACpB,OAAO,IAAIC,SAAQ,SAACC,GAClB,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOH,IAAMA,EACbG,EAAOG,OAAS,WACdJ,GAAQ,IAEVC,EAAOI,QAAU,WACfL,GAAQ,IAEVE,SAASI,KAAKC,YAAYN,MAoHfO,MAhHf,WACE,IAAMC,EAAYC,iBAAO,GACnBC,EAAWD,iBAAO,IACxB,EAA8BE,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAoCJ,qBAApC,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAgBMC,EAAe,uCAAG,4BAAAC,EAAA,sEACJzB,EAChB,gDAFoB,wCAMpB0B,MAAM,sBANc,0BAUhBC,EAAU,CACdC,IAAK,0BACLC,OAAQ,IACRC,SAAUd,EAAQc,SAClBC,KAAM,SACNC,YAAa,mBACbC,QACAC,SAAUlB,EAAQmB,aAClBC,aAAcrC,EAAc,kBAC5BsC,QAAS,CAEPN,KAAM,SACNO,MAAO,2BACPC,QAAS,eAGS,IAAIC,OAAOC,SAASd,GAC5Be,OA3BQ,2CAAH,qDAgDrB,OACE,sBAAKC,UAAU,MAAf,UACE,0DACA,uBACEC,KAAK,SACLC,YAAY,SACZC,MAAOlC,EAAUmC,QAAQD,MACzBE,IAAKpC,IAGP,wBAAQqC,QAzES,WACnBC,IAAM,CACJC,IAAK,8CACLC,OAAQ,OACRC,KAAM,CACJxB,OAAkC,IAA1BjB,EAAUmC,QAAQD,SAG3BQ,MAAK,SAACC,GAAD,OAASA,EAAIF,QAClBC,MAAK,SAACD,GACLpC,EAAWoC,GACXlC,GAAU,OA8DZ,4BACCD,GACC,qCACE,yCACUF,EAAQa,OAAS,IAD3B,IACiCb,EAAQc,YAEzC,0CAAad,EAAQwC,UACrB,oDAAuBxC,EAAQmB,gBAC/B,yBAAQc,QAASzB,EAAjB,iBACOR,EAAQa,OAAS,IADxB,eAKJ,uBACA,uBACA,uBACA,uBACA,uBAAOe,KAAK,OAAOI,IAAKlC,IACxB,wBAAQmC,QA5CU,WACpBC,IAAM,CACJE,OAAQ,OACRD,IAAKpD,EAAc,kBACnBsD,KAAM,CACJI,WAAY3C,EAASiC,QAAQD,MAC7BY,EAAG,YAGJJ,MAAK,SAACC,GAAD,OAASA,EAAIF,QAClBC,MAAK,SAACD,GACLhC,EAAcgC,GACd9B,GAAc,OAgChB,oBACA,uBACA,uBACA,uBACA,uBACCD,GACC,mCACE,8CAAiBF,EAAWuC,YAShC1B,EACJ,+IC1Ha2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjE,SAASkE,eAAe,SAM1BX,M","file":"static/js/main.8b605dbc.chunk.js","sourcesContent":["export const backend_url = \"https://a96877ba23ad.ngrok.io\";\n","import React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { backend_url } from \"./config\";\n\nfunction loadRazorpay(src) {\n  return new Promise((resolve) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n}\n\nfunction App() {\n  const amountRef = useRef(0);\n  const txnIdRef = useRef(\"\");\n  const [resData, setResData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [refundData, setRefundData] = useState();\n  const [showRefund, setShowRefund] = useState(false);\n  const inputHandler = () => {\n    axios({\n      url: \"https://a96877ba23ad.ngrok.io/payment/order\",\n      method: \"POST\",\n      data: {\n        amount: amountRef.current.value * 100,\n      },\n    })\n      .then((res) => res.data)\n      .then((data) => {\n        setResData(data);\n        setLoaded(true);\n      });\n  };\n\n  const displayRazorpay = async () => {\n    const res = await loadRazorpay(\n      \"https://checkout.razorpay.com/v1/checkout.js\"\n    );\n\n    if (!res) {\n      alert(\"Failed to load SDK\");\n      return;\n    }\n\n    const options = {\n      key: \"rzp_test_A2OCAp2ArVuJkM\",\n      amount: 455,\n      currency: resData.currency,\n      name: \"Harish\",\n      description: \"Test Transaction\",\n      image,\n      order_id: resData.raz_order_id,\n      callback_url: backend_url + \"/payment/verify\",\n      prefill: {\n        // current user info\n        name: \"Harish\",\n        email: \"gaurav.kumar@example.com\",\n        contact: \"9079440677\",\n      },\n    };\n    const paymentObject = new window.Razorpay(options);\n    paymentObject.open();\n  };\n\n  // refund handler\n\n  const refundHandler = () => {\n    axios({\n      method: \"POST\",\n      url: backend_url + \"/payment/refund\",\n      data: {\n        payment_id: txnIdRef.current.value,\n        p: \"harish\",\n      },\n    })\n      .then((res) => res.data)\n      .then((data) => {\n        setRefundData(data);\n        setShowRefund(true);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>RazorPay Sample Daffodil</h1>\n      <input\n        type=\"number\"\n        placeholder=\"Amount\"\n        value={amountRef.current.value}\n        ref={amountRef}\n      />\n\n      <button onClick={inputHandler}> create Order </button>\n      {loaded && (\n        <>\n          <h1>\n            Amount {resData.amount / 100} {resData.currency}\n          </h1>\n          <h1> Status {resData.status}</h1>\n          <h1>RazorPay order Id {resData.raz_order_id}</h1>\n          <button onClick={displayRazorpay}>\n            Pay {resData.amount / 100} Rupee\n          </button>\n        </>\n      )}\n      <br />\n      <br />\n      <br />\n      <br />\n      <input type=\"text\" ref={txnIdRef} />\n      <button onClick={refundHandler}>REFUND</button>\n      <br />\n      <br />\n      <br />\n      <br />\n      {showRefund && (\n        <>\n          <h1>Refund id : {refundData.id}</h1>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\nconst image =\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/Image_created_with_a_mobile_phone.png/1200px-Image_created_with_a_mobile_phone.png\";\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}